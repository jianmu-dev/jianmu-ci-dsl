#eb: ci_server_test_ci_cd_hook

global:
  param:
    image_name: jianmudev/jianmu-ci-server

pipeline:
  name: 建木CI服务端测试环境 CI/CD
  description: 建木CI服务端测试环境 CI/CD
  git_clone:
    type: git_clone:1.0.1
    param:
      remote_url: https://gitee.com/jianmu-dev/jianmu-ci-server.git
      # TODO 后续来源为event，筛选指定分支的push
      ref: refs/heads/2.0.0
      netrc_machine: gitee.com
      netrc_username: ((gitee.username))
      netrc_password: ((gitee.password))
  maven_jib_build:
    type: maven_build:1.2.0-jdk11
    param:
      mvn_action: install
      workspace: ${git_clone.git_path}
      image_name: ${global.image_name}
      image_tag: ${git_clone.git_branch}
      docker_username: ((dockerhub.username))
      docker_password: ((dockerhub.password))
      maven_public_url: https://nexus.jianmu.dev/repository/maven-public/
  deploy_server:
    type: ssh_cmd:1.0.0
    param:
      ssh_ip: 172.20.148.86
      ssh_private_key: ((jianmu_ci.server_private_key))
      ssh_cmd: >-
        docker images
        &&
        docker ps
        &&
        cd /root/jianmu-ci
        &&
        source ./.env
        &&
        echo source version: $ci_server_version
        &&
        echo target version: ${git_clone.git_branch}
        &&
        docker-compose stop ci-server
        &&
        docker-compose rm -vf ci-server
        &&
        docker rmi ${global.image_name}:$ci_server_version
        &&
        cp .env .env.$(date +'%Y-%m-%d_%H:%M:%S')
        &&
        sed -i '/^ci_server_version=/d' .env
        &&
        echo ci_server_version=${git_clone.git_branch} >> .env
        &&
        docker-compose up -d ci-server
        &&
        docker images
        &&
        docker ps
        &&
        echo done
  send_message:
    type: qywx_notice:1.0.0
    param:
      bot_webhook_url: ((charbot.webhook_url))
      mentioned_moblie_list: "[]"
      text_content: "建木CI服务端测试环境更新完成。\\n\\n开发分支：${git_clone.git_branch}"
      msgtype: "text"
      mentioned_list: "[]"