name: 更新ssl证书：*.mirror.jianmu.dev

global:
  param:
    domain: "*.mirror.jianmu.dev"
    ssl_dir_docker: /home/ubuntu/ssl/_.mirror.jianmu.dev

trigger:
  type: cron
  schedule: 0 0 12 6 * ? *

workflow:
  start:
    type: start
    targets:
      - acme_ssl_aliyun
  acme_ssl_aliyun:
    sources:
      - start
    targets:
      - scp_cert_docker
      - scp_key_docker
    type: acme_ssl_aliyun:1.0.1
    param:
      wget_use: true
      ali_key: ((ali.jianmu_dev_key))
      domain: ${global.domain}
      ali_secret: ((ali.jianmu_dev_secret))
      dns_check: true
      email: dev@jianmu.dev
  scp_cert_docker:
    sources:
      - acme_ssl_aliyun
    targets:
      - restart_docker_registry
    type: scp_resouce:1.1.0
    param:
      ssh_ip: 172.16.101.236
      ssh_user: ubuntu
      ssh_private_key: ((private_key.236))
      remote_file: ${global.ssl_dir_docker}/fullchain.cer
      local_file: ${acme_ssl_aliyun.cer_path}
  scp_key_docker:
    sources:
      - acme_ssl_aliyun
    targets:
      - restart_docker_registry
    type: scp_resouce:1.1.0
    param:
      ssh_ip: 172.16.101.236
      ssh_user: ubuntu
      ssh_private_key: ((private_key.236))
      remote_file: ${global.ssl_dir_docker}/private.key
      local_file: ${acme_ssl_aliyun.key_path}
  restart_docker_registry:
    sources:
      - scp_cert_docker
      - scp_key_docker
    targets:
      - send_message
    type: ssh_cmd:1.0.1
    param:
      ssh_ip: 172.16.101.236
      ssh_user: ubuntu
      ssh_private_key: ((private_key.236))
      ssh_cmd: >-
        cd /home/ubuntu/registry
        &&
        docker-compose restart registry
  send_message:
    sources:
      - restart_docker_registry
    targets:
      - end
    type: qywx_notice:1.2.1
    param:
      bot_webhook_url: ((charbot.webhook_url))
      mentioned_mobile_list: "[]"
      text_content: "更新ssl证书（${global.domain}）更新完成。"
      msgtype: "text"
      mentioned_list: "[]"
  end:
    type: end
    sources:
      - send_message
