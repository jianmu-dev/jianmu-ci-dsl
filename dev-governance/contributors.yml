name: 构建贡献者列表
description: 构建贡献者列表

trigger:
  type: webhook
  param:
    - name: gitee_token
      type: SECRET
      exp: $.header.X-Gitee-Token
    - name: username
      type: STRING
      exp: $.body.json.pull_request.user.login
    - name: nickname
      type: STRING
      exp: $.body.json.pull_request.user.name
    - name:  avatar_url
      type: STRING
      exp: $.body.json.pull_request.user.avatar_url
    - name: action
      type: STRING
      exp: $.body.json.action
    - name: pr_url
      type: STRING
      exp: $.body.json.url
    - name: email
      type: STRING
      exp: $.body.json.pull_request.user.email
    - name: org_name
      type: STRING
      exp: $.body.json.project.namespace
    - name: exit
      type: NUMBER
      exp: $.body.json.pull_request.additions
    - name: clone_url
      type: STRING
      exp: $.body.json.project.clone_url
  auth:
    token: ${trigger.gitee_token}
    value: ((gitee.webhook_token))
  only: (${trigger.action} === "merge")

workflow:
  start:
    type: start
    targets:
      - git_clone
  git_clone:
    alias: clone仓库
    type: git_clone:1.2.0
    sources:
      - start
    targets:
      - jsonpath
    param:
      remote_url: ${trigger.clone_url}
  jsonpath:
    alias: 提取贡献者昵称
    sources:
      - git_clone
    targets:
      - contributors
    type: "jsonpath:1.1.0"
    param:
      file: ${git_clone.git_path}/contributors/${trigger.username}.yml
      expression: "$.name"
      type: yml
  contributors:
    alias: 构建贡献者列表
    type: contributors_build:1.0.0-gitee
    sources:
      - jsonpath
    targets:
      - git_push
      - sync_contributors_jsonfile
    param:
      json_filepath: ${git_clone.git_path}/data/contributors.json
      username: ${trigger.username}
      nickname: ${jsonpath.result}
      avatar_url: ${trigger.avatar_url}
      pr_url: ${trigger.pr_url}
      email: ${trigger.email}
  git_push:
    alias: push贡献者列表
    type: git_push:1.0.3
    sources:
      - contributors
    targets:
      - condition
    param:
      username: ((gitee.jianmubot_username))
      password: ((gitee.jianmubot_password))
      remote_url: ${trigger.clone_url}
      source_path: ${contributors.contributors_json_filepath}
      target_dir: governance/data
      commit_message: "refactor: contributors.json"
      committer_name: jianmubot
      committer_email: dev@jianmu.dev
  sync_contributors_jsonfile:
    alias: 同步贡献者列表到服务器
    sources:
      - contributors
    targets:
      - condition
    type: scp_resouce:1.1.0
    param:
      ssh_ip: 47.243.164.48
      ssh_private_key: ((private_key.alixg))
      remote_file: /home/jianmu-data/contributors.json
      local_file: ${contributors.contributors_json_filepath}

  condition:
    alias: 判断用户是退出还是加入
    sources:
      - git_push
      - sync_contributors_jsonfile
    type: condition
    expression: ${trigger.exit}==0
    cases:
      true: end
      false: member_add

  member_add:
    alias: 将用户加入到组织
    sources:
      - condition
    targets:
      - send_message
      - send_email
    type: gitee:1.0.0-member-add
    param:
      access_token: ((gitee.jianmubot_token))
      org: ${trigger.org_name}
      username: ${trigger.username}

  send_message:
    alias: 提醒贡献者已加入
    type: feishu_notice_post:1.0.2
    sources:
      - member_add
    targets:
      - end
    param:
      bot_webhook_url: ((feishu.webhook_url))
      msg_title: 贡献者已加入
      msg_text: "贡献者已加入。\n用户名：${trigger.username}"

  send_email:
    sources:
      - member_add
    targets:
      - end
    type: email:1.0.0
    param:
      host: smtp.ym.163.com
      sender: notice@jianmu.dev
      auth_code: ((email.notice_auth_code))
      receivers: '["dev@jianmu.dev"]'
      type: html
      subject: 贡献者已加入
      text: 贡献者已加入。<br/>用户名：${trigger.username}
  end:
    type: end
    sources:
      - condition
      - send_email
      - send_message

